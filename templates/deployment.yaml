apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    app: {{ include "app.fullname" . }}
{{ include "app.labels.common" $ | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "app.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "app.fullname" . }}
{{ include "app.labels.common" $ | indent 8 }}
      annotations:
{{- range $map_name := .Values.inject_maps }}
        checksum/{{ $map_name | replace "-" "_" }}: {{ index $.Values.global ($map_name | replace "-" "_") }}
{{- end }}
{{- range $map_name := .Values.global.inject_maps }}
        checksum/{{ $map_name | replace "-" "_" }}: {{ index $.Values.global ($map_name | replace "-" "_") }}
{{- end }}
{{- if .Values.operator.keycloak.enabled }}
        checksum/{{ template "app.fullname" $ }}-config-keycloak: {{ include (print $.Template.BasePath "/config-keycloak.yaml") . | sha256sum }}
{{- end }}
{{- if and (.Values.db.enabled) (.Values.operator.data.mgmt.enabled) }}
        checksum/{{ template "app.fullname" $ }}-config-data-mgmt: {{ include (print $.Template.BasePath "/config-data-mgmt.yaml") . | sha256sum }}
{{- end }}
{{- if .Values.env_secrets }}
        checksum/{{ template "app.fullname" $ }}-env: {{ include (print $.Template.BasePath "/secret-env.yaml") . | sha256sum }}
{{- end }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
        {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
        {{ else }}
      serviceAccountName: {{ template "app.fullname" $ }}     
        {{- end }}
      {{- end }}
      {{- if .Values.serviceAccountSuffix }} 
      serviceAccountName: {{ template "app.fullname" $ }}-{{ .Values.serviceAccountSuffix }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- .Values.nodeSelector | toYaml | trim | nindent 8 }}
      {{- else if .Values.global.nodeSelector }}
      nodeSelector:
        {{- .Values.global.nodeSelector | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- .Values.tolerations | toYaml | trim | nindent 8 }}
      {{- else if .Values.global.tolerations }}
      tolerations:
        {{- .Values.global.tolerations | toYaml | trim | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ template "app.fullname" $ }}
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ include "app.image.tag" . }}
        imagePullPolicy: {{ .Values.image.pull }}
        ports:
        - containerPort: {{ .Values.pod.port }}
        readinessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.url }}
            port: {{ .Values.pod.port }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.url }}
            port: {{ .Values.pod.port }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 5
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: {{ .Values.startupProbe.url }}
            port: {{ .Values.pod.port }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10          
        env:
          {{- if .Values.db.enabled }}        
          - name: {{ .Values.template.db_property_url }}
            value: {{ include "app.db.url" $  }}
          - name: {{ .Values.template.db_property_username }}
            value: {{ include "app.db.username" $ }}
          - name: {{ .Values.template.db_property_password }}
            valueFrom:
              secretKeyRef:
                name: {{ template "app.fullname" $ }}-db-config
                key: password
          {{- end }}
          {{- if .Values.operator.permission.enabled }}          
          - name: {{ .Values.template.permision_product_name }}
            value: {{ include "app.permission.product.name" $ }}
          {{- end }}          
          {{- if .Values.operator.keycloak.client.enabled }}
          - name: {{ .Values.template.oidc_client_url }}
            value: {{ include "app.oidc.client.url" $ }}
          - name: {{ .Values.template.oidc_client_id }}
            valueFrom:
              secretKeyRef:
                name: {{ include "app.oidc.client.secret.name" $ }}
                key: clientId 
          - name: {{ .Values.template.oidc_client_credential }}
            valueFrom:
              secretKeyRef:
                name: {{ include "app.oidc.client.secret.name" $ }}
                key: secret
          {{- end }}
          {{- $envVals := .Values.global.env -}}
          {{- if (.Values.env) }}
          {{- $envVals = merge .Values.env $envVals -}}
          {{- end }}
          {{- if $envVals }}
          {{- range $key,$val := $envVals }}
          - name: {{ $key }}
            value: {{ tpl ($val|toString) $ | quote }}
          {{- end }}
          {{- end }}

          {{- if .Values.env_secrets }}
          {{- range $secret_key,$secret_value := .Values.env_secrets }}
          - name: {{ $secret_key }}
            valueFrom:
              secretKeyRef:
                key:  {{ $secret_key }}
                name: {{ template "app.fullname" $ }}-env
          {{- end }}        
          {{- end }}
          {{- if .Values.envCustom }} 
            {{- .Values.envCustom | toYaml | trim | nindent 10 }}
          {{- end }}
        {{- if or (.Values.global.inject_maps) (.Values.inject_maps) }}
        envFrom:
          {{- $im := .Values.global.inject_maps -}}
          {{- if (.Values.inject_maps) }}
          {{- $im = concat .Values.inject_maps .Values.global.inject_maps | uniq -}}
          {{- end }}
          {{- if $im }}
          {{- range $map_name := $im }}
          - configMapRef:
              name: {{ $map_name }}
          {{- end }}
          {{- end }}
        {{- end }}

      initContainers:
        {{- if .Values.db.enabled }}
        {{- if .Values.db.check.enabled }}
        - name: {{ .Values.db.check.name }}
          image: {{ .Values.db.check.image.registry }}/{{ .Values.db.check.image.repository }}:{{ include "app.db.check.image.tag" . }}
          imagePullPolicy: {{ .Values.db.check.image.pull }}
          env:
            - name: {{ .Values.template.db_property_url }}
              value: {{ include "app.db.url" $  }}
            - name: {{ .Values.template.db_property_username }}
              value: {{ include "app.db.username" $ }}
            - name: {{ .Values.template.db_property_password }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "app.fullname" $ }}-db-config
                  key: password
        {{- end }}
        {{- end }}
